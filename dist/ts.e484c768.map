{"version":3,"sources":["src\\ts\\helpers.ts","src\\ts\\index.ts"],"names":[],"mappings":"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","file":"ts.e484c768.map","sourceRoot":"..","sourcesContent":["const createElementWithClass = (elementType: string, classesName: string) => {\r\n    const element = document.createElement(elementType)\r\n    element.classList.add(classesName)\r\n    return element\r\n}\r\n\r\nconst createElementWithManyClass = (elementType: string, classesName: string[]) => {\r\n    const element = document.createElement(elementType)\r\n    classesName.forEach(classe => {\r\n        element.classList.add(classe)\r\n    })\r\n    return element\r\n}\r\n\r\nconst addElemntsToContainer = <T>(container: any, elements: T[]) => {\r\n    elements.forEach(element => {\r\n        container.appendChild(element)\r\n    })\r\n}\r\n\r\nconst setAttr = (element: HTMLElement, attributes: Record<string, any>, setContent?: string) => {\r\n    Object.keys(attributes).forEach(attribut => {\r\n      element.setAttribute(attribut, attributes[attribut])\r\n    })\r\n    if(setContent) element.innerHTML = setContent\r\n  } \r\n\r\n\r\nexport { createElementWithClass, createElementWithManyClass, addElemntsToContainer, setAttr }","import { createElementWithClass, createElementWithManyClass, addElemntsToContainer, setAttr } from './helpers'\r\nconst body = document.querySelector<HTMLBodyElement>('.body')!\r\n\r\n// sendMessage\r\nconst createMessageElement = (messType: 'bot' | 'user') => createElementWithManyClass('div', [`chat__${messType}`, 'chat__message'])\r\n\r\n\r\nclass Chatbot {\r\n  input: any\r\n  submitInput: HTMLElement\r\n  chatBtn: HTMLElement\r\n  chatContainer: HTMLElement\r\n  chatQuesBtn: any\r\n  chatQues: HTMLDivElement\r\n  root: HTMLElement\r\n  chatWindow: HTMLElement\r\n  quesOptions: string[]\r\n  quesReply: string[]\r\n\r\n\r\n  constructor(root: HTMLElement = document.body) {\r\n    this.root = root\r\n    this.input = createElementWithClass('input', 'chat__input--field')\r\n    this.submitInput = createElementWithClass('button', 'chat__input--submit')\r\n    this.chatBtn = createElementWithClass('button', 'chat__btn')\r\n\r\n    this.chatContainer = createElementWithManyClass('div', ['chat__container', 'active'])\r\n    this.chatQues = document.createElement('div')\r\n    this.chatWindow = createElementWithClass('div', 'chat__window')\r\n    this.quesOptions = ['Payment declined', 'Payment info', 'Unknown charge', 'Promotions and Deals']\r\n    this.quesReply = ['I am very sorry your card has been declined', 'Your last paymant was $3.000', 'I will transfer you to... ', 'Are special deals for you...  ']\r\n  }\r\n\r\n  init() {\r\n    this.createLayout()\r\n    this.chatEventsHandler()\r\n    this.botQueHandler()\r\n  }\r\n\r\n  createLayout() {\r\n    // creating elements\r\n    const chatDiv = createElementWithClass('div', 'chat')\r\n    const chatInput = createElementWithClass('form', 'chat__input')\r\n\r\n    this.chatBtn.innerHTML = 'Chat'\r\n  \r\n    setAttr(this.input, { type: 'text' , placeholder: 'Ask me question...?'})\r\n    setAttr(this.submitInput, {type: 'submit'}, 'âœ”')\r\n\r\n    //appending element\r\n    this.root.appendChild(chatDiv)\r\n    addElemntsToContainer(chatDiv, [this.chatBtn, this.chatContainer])\r\n    addElemntsToContainer(this.chatContainer, [this.chatWindow, chatInput])\r\n    addElemntsToContainer(chatInput, [this.input, this.submitInput])\r\n    this.chatWindow.appendChild(this.chatQues)\r\n  }\r\n\r\n  botAnswers(question: string) {\r\n    const findAnswer = this.quesOptions.indexOf(question)\r\n    const botMessage = findAnswer === -1 ? 'I\\'m sorry. Chose one of the folowing options: ' : this.quesReply[findAnswer];\r\n    const chatBotMessage = createMessageElement('bot') \r\n    chatBotMessage.innerHTML = botMessage\r\n    this.chatWindow.appendChild(chatBotMessage)\r\n    this.resetHeight()\r\n  }\r\n\r\n  botQueHandler() {\r\n    this.quesOptions.forEach((option, i) => {\r\n      const chatQuesBtn = document.createElement('button')\r\n      chatQuesBtn.innerHTML = option\r\n      chatQuesBtn.setAttribute('id', `${i}`)\r\n      chatQuesBtn.addEventListener('click', (e) => this.predominateOptionsHandler(e));\r\n      this.chatQues.appendChild(chatQuesBtn)\r\n    })\r\n  }\r\n\r\n  resetHeight() {\r\n    this.chatWindow.removeChild(this.chatQues)\r\n    this.chatWindow.appendChild(this.chatQues)\r\n    this.chatWindow.scrollTo(0, this.chatWindow.scrollHeight)\r\n  }\r\n\r\n  predominateOptionsHandler(e: any) {\r\n      const chatBotMessage = createMessageElement('bot')\r\n      const chatUserMessage = createMessageElement('user')\r\n      const targetId = +e.target.id\r\n\r\n      chatUserMessage.innerHTML = e.target.innerHTML\r\n      chatBotMessage.innerHTML = this.quesReply[targetId]\r\n      this.chatWindow.append(chatUserMessage, chatBotMessage)\r\n\r\n      this.resetHeight()\r\n  }\r\n\r\n  chatEventsHandler() {\r\n    this.submitInput.addEventListener('click', (e) => {\r\n      const chatUserMessage = createMessageElement('user')\r\n      e.preventDefault()\r\n      const userMessage = this.input.value\r\n      this.input.value = ''\r\n      chatUserMessage.innerHTML = userMessage\r\n      this.chatWindow.appendChild(chatUserMessage)\r\n      this.botAnswers(userMessage);\r\n    })\r\n\r\n    this.chatBtn.addEventListener('click', () => {\r\n      this.chatContainer.classList.toggle('active')\r\n    })\r\n\r\n    window.addEventListener('mouseup', (e) => {\r\n      if (e.target === body) {\r\n        this.chatContainer.classList.remove('active')\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nconst chat = new Chatbot(body)\r\nchat.init()\r\n"]}